---
apiVersion: v1
kind: Namespace
metadata:
  annotations:
    meta.helm.sh/release-name: my-dataflow
    meta.helm.sh/release-namespace: bytewax
  labels:
    app.kubernetes.io/instance: my-dataflow
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: bytewax
    bytewax.io/managed-by: waxctl
    kubernetes.io/metadata.name: bytewax
  name: bytewax
spec:
  finalizers:
    - kubernetes
---
apiVersion: v1
data:
  basic.py: |
    import bytewax.operators as op
    from bytewax.connectors.stdio import StdOutSink
    from bytewax.dataflow import Dataflow
    from bytewax.testing import TestingSource


    def double(x: int) -> int:
        return x * 2


    def halve(x: int) -> int:
        return x // 2


    def minus_one(x: int) -> int:
        return x - 1


    def stringy(x: int) -> str:
        return f"<dance>{x}</dance>"


    flow = Dataflow("basic")

    inp = op.input("inp", flow, TestingSource(range(10)))
    branch = op.branch("e_o", inp, lambda x: x % 2 == 0)
    evens = op.map("halve", branch.trues, halve)
    odds = op.map("double", branch.falses, double)
    combo = op.merge("merge", evens, odds)
    combo = op.map("minus_one", combo, minus_one)
    string_output = op.map("stringy", combo, stringy)
    op.output("out", string_output, StdOutSink())
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: my-dataflow
    meta.helm.sh/release-namespace: bytewax
  labels:
    app.kubernetes.io/instance: my-dataflow
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: bytewax
    bytewax.io/managed-by: waxctl
  name: my-dataflow
  namespace: bytewax
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  annotations:
    meta.helm.sh/release-name: my-dataflow
    meta.helm.sh/release-namespace: bytewax
  generation: 2
  labels:
    app.kubernetes.io/instance: my-dataflow
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: bytewax
    app.kubernetes.io/version: 0.8.0
    bytewax.io/managed-by: waxctl
    helm.sh/chart: bytewax-0.2.3
  name: my-dataflow
  namespace: bytewax
spec:
  podManagementPolicy: Parallel
  replicas: 3
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app.kubernetes.io/instance: my-dataflow
      app.kubernetes.io/name: bytewax
  serviceName: my-dataflow
  template:
    metadata:
      creationTimestamp: null
      labels:
        app.kubernetes.io/instance: my-dataflow
        app.kubernetes.io/name: bytewax
    spec:
      containers:
        - command:
            - sh
            - -c
            - sh ./entrypoint.sh
          env:
            - name: RUST_LOG
              value: librdkafka=debug,rdkafka::client=debug
            - name: RUST_BACKTRACE
              value: full
            - name: BYTEWAX_PYTHON_FILE_PATH
              value: /var/bytewax/basic.py
            - name: BYTEWAX_WORKDIR
              value: /var/bytewax
            - name: BYTEWAX_WORKERS_PER_PROCESS
              value: "1"
            - name: BYTEWAX_POD_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.name
            - name: BYTEWAX_REPLICAS
              value: "3"
            - name: BYTEWAX_KEEP_CONTAINER_ALIVE
              value: "true"
            - name: BYTEWAX_HOSTFILE_PATH
              value: /etc/bytewax/hostfile.txt
            - name: BYTEWAX_STATEFULSET_NAME
              value: my-dataflow
          image: bytewax/bytewax:latest
          imagePullPolicy: Always
          name: process
          ports:
            - containerPort: 9999
              name: process
              protocol: TCP
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              add:
                - NET_BIND_SERVICE
              drop:
                - ALL
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
            - mountPath: /etc/bytewax
              name: hostfile
            - mountPath: /var/bytewax/
              name: working-directory
      dnsPolicy: ClusterFirst
      imagePullSecrets:
        - name: default-credentials
      initContainers:
        - command:
            - sh
            - -c
            - |
              set -ex
              # Generate hostfile.txt.
              echo "my-dataflow-0.my-dataflow.bytewax.svc.cluster.local:9999" > /etc/bytewax/hostfile.txt
              replicas=$(($BYTEWAX_REPLICAS-1))
              x=1
              while [ $x -le $replicas ]
              do
                echo "my-dataflow-$x.my-dataflow.bytewax.svc.cluster.local:9999" >> /etc/bytewax/hostfile.txt
                x=$(( $x + 1 ))
              done
              # Copy python files to working directory
              cp /tmp/bytewax/. /var/bytewax -R
              cd /var/bytewax
              tar -xvf *.tar || echo "No tar files found."
          env:
            - name: BYTEWAX_REPLICAS
              value: "3"
          image: busybox
          imagePullPolicy: Always
          name: init-hostfile
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              add:
                - NET_BIND_SERVICE
              drop:
                - ALL
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
            - mountPath: /etc/bytewax
              name: hostfile
            - mountPath: /var/bytewax/
              name: working-directory
            - mountPath: /tmp/bytewax/
              name: python-files
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext:
        fsGroup: 2000
        runAsGroup: 3000
        runAsNonRoot: true
        runAsUser: 65532
      serviceAccount: my-dataflow-bytewax
      serviceAccountName: my-dataflow-bytewax
      terminationGracePeriodSeconds: 10
      volumes:
        - emptyDir: {}
          name: hostfile
        - configMap:
            defaultMode: 420
            name: my-dataflow
          name: python-files
        - emptyDir: {}
          name: working-directory
  updateStrategy:
    rollingUpdate:
      partition: 0
    type: RollingUpdate
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: my-dataflow
    meta.helm.sh/release-namespace: bytewax
  labels:
    app.kubernetes.io/instance: my-dataflow
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: bytewax
    app.kubernetes.io/version: 0.8.0
    bytewax.io/managed-by: waxctl
    helm.sh/chart: bytewax-0.2.3
  name: my-dataflow
  namespace: bytewax
spec:
  clusterIP: None
  clusterIPs:
    - None
  ipFamilies:
    - IPv4
  ipFamilyPolicy: SingleStack
  ports:
    - name: worker
      port: 9999
      protocol: TCP
      targetPort: 9999
  selector:
    app.kubernetes.io/instance: my-dataflow
    app.kubernetes.io/name: bytewax
  sessionAffinity: None
  type: ClusterIP
---
apiVersion: v1
imagePullSecrets:
  - name: default-credentials
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: my-dataflow
    meta.helm.sh/release-namespace: bytewax
  labels:
    app.kubernetes.io/instance: my-dataflow
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: bytewax
    app.kubernetes.io/version: 0.8.0
    bytewax.io/managed-by: waxctl
    helm.sh/chart: bytewax-0.2.3
  name: my-dataflow-bytewax
  namespace: bytewax
secrets:
  - name: my-dataflow-bytewax-token-2nnxc
